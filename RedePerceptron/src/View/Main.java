package View;

import Model.Arquivo;
import Model.ArquivoDadosExecucao;
import Model.ArquivoDadosTreinamento;
import Model.Perceptron;
import java.awt.FileDialog;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author Jônatas Trabuco Belotti [jonatas.t.belotti@hotmail.com]
 */
public class Main extends javax.swing.JFrame {

  private FileDialog janelaAbrir;
  private FileDialog janelaSalvar;
  private Arquivo arquivoSalvar;
  private ArquivoDadosTreinamento arquivoTreinamento;
  private ArquivoDadosExecucao arquivoExecucao;
  private Perceptron redePerceptron;

  /**
   * Creates new form Main
   */
  public Main() {
    initComponents();
    this.setLocationRelativeTo(null);
    Comunicador.setCampo(jTxtLog);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPnAbrirArquivo = new javax.swing.JPanel();
    jLabel2 = new javax.swing.JLabel();
    jTxtArquivoDadosTreinamento = new javax.swing.JTextField();
    jBtnAbrirDadosTreinamento = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();
    jPnTreinamento = new javax.swing.JPanel();
    jLabel6 = new javax.swing.JLabel();
    jChPesosAleatorios = new javax.swing.JCheckBox();
    jChPesosFixos = new javax.swing.JCheckBox();
    jLabel5 = new javax.swing.JLabel();
    jTxtPeso0 = new javax.swing.JTextField();
    jLabel7 = new javax.swing.JLabel();
    jTxtPeso1 = new javax.swing.JTextField();
    jLabel8 = new javax.swing.JLabel();
    jTxtPeso2 = new javax.swing.JTextField();
    jLabel9 = new javax.swing.JLabel();
    jTxtPeso3 = new javax.swing.JTextField();
    jBtnTreinar = new javax.swing.JButton();
    jScrollPane1 = new javax.swing.JScrollPane();
    jTxtLog = new javax.swing.JTextArea();
    jPnExecucao = new javax.swing.JPanel();
    jLabel10 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    jScrollPane2 = new javax.swing.JScrollPane();
    jTxtExecucao = new javax.swing.JTextArea();
    jBtnAbrirDadosExecucao = new javax.swing.JButton();
    jBtnClassificar = new javax.swing.JButton();
    jBtnSalvarResultado = new javax.swing.JButton();
    jBtnLimpar = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("Rede Perceptron - Jônatas Trabuco Belotti");
    setPreferredSize(new java.awt.Dimension(800, 600));
    setResizable(false);

    jPnAbrirArquivo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jLabel2.setText("Selecione o arquivo com os dados de treinamento:");

    jTxtArquivoDadosTreinamento.setEditable(false);
    jTxtArquivoDadosTreinamento.setFocusable(false);

    jBtnAbrirDadosTreinamento.setText("Abrir");
    jBtnAbrirDadosTreinamento.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jBtnAbrirDadosTreinamentoActionPerformed(evt);
      }
    });

    jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
    jLabel1.setText("Dados de treinamento");

    javax.swing.GroupLayout jPnAbrirArquivoLayout = new javax.swing.GroupLayout(jPnAbrirArquivo);
    jPnAbrirArquivo.setLayout(jPnAbrirArquivoLayout);
    jPnAbrirArquivoLayout.setHorizontalGroup(
      jPnAbrirArquivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPnAbrirArquivoLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPnAbrirArquivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPnAbrirArquivoLayout.createSequentialGroup()
            .addGroup(jPnAbrirArquivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel1)
              .addComponent(jLabel2))
            .addGap(0, 0, Short.MAX_VALUE))
          .addComponent(jTxtArquivoDadosTreinamento))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jBtnAbrirDadosTreinamento, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );
    jPnAbrirArquivoLayout.setVerticalGroup(
      jPnAbrirArquivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPnAbrirArquivoLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabel2)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPnAbrirArquivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jTxtArquivoDadosTreinamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jBtnAbrirDadosTreinamento))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPnTreinamento.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
    jLabel6.setText("Treinamento");

    jChPesosAleatorios.setSelected(true);
    jChPesosAleatorios.setText("Pesos iniciais aleatórios");
    jChPesosAleatorios.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jChPesosAleatoriosActionPerformed(evt);
      }
    });

    jChPesosFixos.setText("Pesos iniciais fixos");
    jChPesosFixos.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jChPesosFixosActionPerformed(evt);
      }
    });

    jLabel5.setText("W0");

    jTxtPeso0.setText("0,00000");
    jTxtPeso0.setEnabled(false);

    jLabel7.setText("W1");

    jTxtPeso1.setText("0,00000");
    jTxtPeso1.setEnabled(false);

    jLabel8.setText("W2");

    jTxtPeso2.setText("0,00000");
    jTxtPeso2.setEnabled(false);

    jLabel9.setText("W3");

    jTxtPeso3.setText("0,00000");
    jTxtPeso3.setEnabled(false);

    jBtnTreinar.setText("Treinar");
    jBtnTreinar.setEnabled(false);
    jBtnTreinar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jBtnTreinarActionPerformed(evt);
      }
    });

    jTxtLog.setEditable(false);
    jTxtLog.setColumns(20);
    jTxtLog.setRows(5);
    jScrollPane1.setViewportView(jTxtLog);

    javax.swing.GroupLayout jPnTreinamentoLayout = new javax.swing.GroupLayout(jPnTreinamento);
    jPnTreinamento.setLayout(jPnTreinamentoLayout);
    jPnTreinamentoLayout.setHorizontalGroup(
      jPnTreinamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPnTreinamentoLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPnTreinamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(jScrollPane1)
          .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPnTreinamentoLayout.createSequentialGroup()
            .addGroup(jPnTreinamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel5)
              .addComponent(jTxtPeso0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPnTreinamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(jPnTreinamentoLayout.createSequentialGroup()
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTxtPeso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
              .addGroup(jPnTreinamentoLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel7)))
            .addGap(18, 18, 18)
            .addGroup(jPnTreinamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel8)
              .addComponent(jTxtPeso2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(jPnTreinamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(jPnTreinamentoLayout.createSequentialGroup()
                .addComponent(jLabel9)
                .addGap(0, 0, Short.MAX_VALUE))
              .addGroup(jPnTreinamentoLayout.createSequentialGroup()
                .addComponent(jTxtPeso3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnTreinar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
          .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPnTreinamentoLayout.createSequentialGroup()
            .addComponent(jChPesosAleatorios)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jChPesosFixos)))
        .addContainerGap())
    );
    jPnTreinamentoLayout.setVerticalGroup(
      jPnTreinamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPnTreinamentoLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel6)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPnTreinamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jChPesosAleatorios)
          .addComponent(jChPesosFixos))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPnTreinamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel5)
          .addComponent(jLabel7)
          .addComponent(jLabel8)
          .addComponent(jLabel9))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPnTreinamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jTxtPeso0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jTxtPeso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jTxtPeso2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jTxtPeso3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jBtnTreinar))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
        .addContainerGap())
    );

    jPnExecucao.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jLabel10.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
    jLabel10.setText("Exeução");

    jLabel3.setText("Digite os dados para classificação ou carregue de um arquivo.");

    jTxtExecucao.setColumns(20);
    jTxtExecucao.setRows(5);
    jScrollPane2.setViewportView(jTxtExecucao);

    jBtnAbrirDadosExecucao.setText("Carregar arquivo");
    jBtnAbrirDadosExecucao.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jBtnAbrirDadosExecucaoActionPerformed(evt);
      }
    });

    jBtnClassificar.setText("CLASSIFICAR");
    jBtnClassificar.setEnabled(false);
    jBtnClassificar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jBtnClassificarActionPerformed(evt);
      }
    });

    jBtnSalvarResultado.setText("Salvar resultado");
    jBtnSalvarResultado.setEnabled(false);
    jBtnSalvarResultado.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jBtnSalvarResultadoActionPerformed(evt);
      }
    });

    jBtnLimpar.setText("Limpar");
    jBtnLimpar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jBtnLimparActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPnExecucaoLayout = new javax.swing.GroupLayout(jPnExecucao);
    jPnExecucao.setLayout(jPnExecucaoLayout);
    jPnExecucaoLayout.setHorizontalGroup(
      jPnExecucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPnExecucaoLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPnExecucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPnExecucaoLayout.createSequentialGroup()
            .addComponent(jLabel10)
            .addGap(0, 0, Short.MAX_VALUE))
          .addGroup(jPnExecucaoLayout.createSequentialGroup()
            .addGroup(jPnExecucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
              .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPnExecucaoLayout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnAbrirDadosExecucao))
              .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPnExecucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jBtnSalvarResultado, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
              .addComponent(jBtnLimpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(jBtnClassificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        .addContainerGap())
    );
    jPnExecucaoLayout.setVerticalGroup(
      jPnExecucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPnExecucaoLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel10)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPnExecucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel3)
          .addComponent(jBtnAbrirDadosExecucao))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPnExecucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPnExecucaoLayout.createSequentialGroup()
            .addComponent(jBtnClassificar)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jBtnLimpar)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jBtnSalvarResultado)
            .addGap(12, 12, 12))
          .addGroup(jPnExecucaoLayout.createSequentialGroup()
            .addComponent(jScrollPane2)
            .addContainerGap())))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jPnAbrirArquivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jPnTreinamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jPnExecucao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jPnAbrirArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPnTreinamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPnExecucao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jChPesosAleatoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChPesosAleatoriosActionPerformed
    // TODO add your handling code here:
    acaoCheckPesosAleatorios();
  }//GEN-LAST:event_jChPesosAleatoriosActionPerformed

  private void jChPesosFixosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChPesosFixosActionPerformed
    // TODO add your handling code here:
    acaoCheckPesosFixos();
  }//GEN-LAST:event_jChPesosFixosActionPerformed

  private void jBtnTreinarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnTreinarActionPerformed
    // TODO add your handling code here:
    acaoBotaoTreinar();
  }//GEN-LAST:event_jBtnTreinarActionPerformed

  private void jBtnAbrirDadosTreinamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAbrirDadosTreinamentoActionPerformed
    acaoBotaoAbrir();
  }//GEN-LAST:event_jBtnAbrirDadosTreinamentoActionPerformed

  private void jBtnClassificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnClassificarActionPerformed
    // TODO add your handling code here:
    acaoBotaoClassificar();
  }//GEN-LAST:event_jBtnClassificarActionPerformed

  private void jBtnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLimparActionPerformed
    // TODO add your handling code here:
    acaoBotaoLimpar();
  }//GEN-LAST:event_jBtnLimparActionPerformed

  private void jBtnAbrirDadosExecucaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAbrirDadosExecucaoActionPerformed
    // TODO add your handling code here:
    acaoBotaoCarregarArquivoExecucao();
  }//GEN-LAST:event_jBtnAbrirDadosExecucaoActionPerformed

  private void jBtnSalvarResultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSalvarResultadoActionPerformed
    // TODO add your handling code here:
    acaoBotaoSalvarResultado();
  }//GEN-LAST:event_jBtnSalvarResultadoActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new Main().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jBtnAbrirDadosExecucao;
  private javax.swing.JButton jBtnAbrirDadosTreinamento;
  private javax.swing.JButton jBtnClassificar;
  private javax.swing.JButton jBtnLimpar;
  private javax.swing.JButton jBtnSalvarResultado;
  private javax.swing.JButton jBtnTreinar;
  private javax.swing.JCheckBox jChPesosAleatorios;
  private javax.swing.JCheckBox jChPesosFixos;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel10;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JPanel jPnAbrirArquivo;
  private javax.swing.JPanel jPnExecucao;
  private javax.swing.JPanel jPnTreinamento;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JTextField jTxtArquivoDadosTreinamento;
  private javax.swing.JTextArea jTxtExecucao;
  private javax.swing.JTextArea jTxtLog;
  private javax.swing.JTextField jTxtPeso0;
  private javax.swing.JTextField jTxtPeso1;
  private javax.swing.JTextField jTxtPeso2;
  private javax.swing.JTextField jTxtPeso3;
  // End of variables declaration//GEN-END:variables

  private void acaoBotaoAbrir() {
    String pasta;
    String nome;

    if (this.janelaAbrir == null) {
      this.janelaAbrir = new FileDialog((java.awt.Frame) null, "Selecionar arquivo", FileDialog.LOAD);
    }

    this.janelaAbrir.setMultipleMode(false);

    this.janelaAbrir.setVisible(true);

    pasta = janelaAbrir.getDirectory();
    nome = janelaAbrir.getFile();

    if (pasta != null && nome != null) {
      arquivoTreinamento = new ArquivoDadosTreinamento(pasta, nome);

      if (arquivoTreinamento.validarArquivo() == false) {
        JOptionPane.showMessageDialog(null, "Erro ao abrir o arquivo, ele está vazio ou não existe.", "Erro ao abrir arquivo", JOptionPane.ERROR_MESSAGE);
        return;
      }

      if (arquivoTreinamento.validarDados() == false) {
        JOptionPane.showMessageDialog(null, "Os dados de treinamento não estão no formato correto.", "Erro ao abrir arquivo", JOptionPane.ERROR_MESSAGE);
        return;
      }

      jTxtArquivoDadosTreinamento.setText(arquivoTreinamento.getCaminhoArquivo() + arquivoTreinamento.getNomeArquivo());
      jBtnTreinar.setEnabled(true);
    }

  }

  private void acaoCheckPesosAleatorios() {
    if (jChPesosAleatorios.isSelected()) {
      jChPesosFixos.setSelected(false);
      jTxtPeso0.setText("0,00000");
      jTxtPeso1.setText("0,00000");
      jTxtPeso2.setText("0,00000");
      jTxtPeso3.setText("0,00000");

      jTxtPeso0.setEnabled(false);
      jTxtPeso2.setEnabled(false);
      jTxtPeso1.setEnabled(false);
      jTxtPeso3.setEnabled(false);
    }
  }

  private void acaoCheckPesosFixos() {
    if (jChPesosFixos.isSelected()) {
      jChPesosAleatorios.setSelected(false);

      jTxtPeso0.setEnabled(true);
      jTxtPeso2.setEnabled(true);
      jTxtPeso1.setEnabled(true);
      jTxtPeso3.setEnabled(true);
    }
  }

  private void acaoBotaoTreinar() {
    if (arquivoTreinamento == null) {
      JOptionPane.showMessageDialog(null, "Selecione o arquivo com os dados de treinamento.", "Erro ao abrir arquivo", JOptionPane.ERROR_MESSAGE);
      return;
    }

    if (arquivoTreinamento.validarArquivo() == false) {
      JOptionPane.showMessageDialog(null, "Erro ao abrir o arquivo, ele está vazio ou não existe.", "Erro ao abrir arquivo", JOptionPane.ERROR_MESSAGE);
      return;
    }

    if (jChPesosFixos.isSelected() && (validarPesosIniciais() == false)) {
      JOptionPane.showMessageDialog(null, "Os pesos iniciais devem estar entre 0 e 1.", "Pesos iniciais inválidos", JOptionPane.ERROR_MESSAGE);
      return;
    }

    treinarRede();
  }

  private void acaoBotaoCarregarArquivoExecucao() {
    String pasta;
    String nome;

    if (this.janelaAbrir == null) {
      this.janelaAbrir = new FileDialog((java.awt.Frame) null, "Selecionar arquivo", FileDialog.LOAD);
    }

    this.janelaAbrir.setMultipleMode(false);
    this.janelaAbrir.setVisible(true);

    pasta = this.janelaAbrir.getDirectory();
    nome = this.janelaAbrir.getFile();

    if (pasta != null && nome != null) {
      arquivoExecucao = new ArquivoDadosExecucao(pasta, nome);

      if (arquivoExecucao.validarArquivo() == false) {
        JOptionPane.showMessageDialog(null, "Erro ao abrir o arquivo, ele está vazio ou não existe.", "Erro ao abrir arquivo", JOptionPane.ERROR_MESSAGE);
        return;
      }

      jTxtExecucao.setText(arquivoExecucao.lerArquivo());
    }
  }

  private void acaoBotaoClassificar() {
    int i;
    double valor1;
    double valor2;
    double valor3;
    String resposta;
    String[] vetor;

    if (validarDados() == false) {
      JOptionPane.showMessageDialog(null, "Os dados para classificação não estão no formato correto.", "Erro", JOptionPane.ERROR_MESSAGE);
      return;
    }

    resposta = "";
    for (String linha : jTxtExecucao.getText().replaceAll("\r", "").split("\n")) {
      i = 0;
      vetor = linha.split("\\s+");

      if (vetor[0].equals("")) {
        i = 1;
      }

      valor1 = Double.parseDouble(vetor[i++].replace(",", "."));
      valor2 = Double.parseDouble(vetor[i++].replace(",", "."));
      valor3 = Double.parseDouble(vetor[i].replace(",", "."));

      resposta += linha + " - " + redePerceptron.classificar(valor1, valor2, valor3) + "\n";
    }

    jTxtExecucao.setText(resposta);
    jBtnSalvarResultado.setEnabled(true);
  }

  private void acaoBotaoLimpar() {
    jTxtExecucao.setText("");
    jBtnSalvarResultado.setEnabled(false);
  }

  private void acaoBotaoSalvarResultado() {
    String nome;
    String pasta;

    if (this.janelaSalvar == null) {
      this.janelaSalvar = new FileDialog(this, "Salvar arquivo", FileDialog.SAVE);
    }

    this.janelaSalvar.setVisible(true);

    pasta = this.janelaSalvar.getDirectory();
    nome = this.janelaSalvar.getFile();

    if (pasta != null && nome != null) {
      if (nome.indexOf(".") == -1) {
        nome += ".txt";
      }
    }

    arquivoSalvar = new Arquivo(pasta, nome);

    if (arquivoSalvar.salvarArquivo(jTxtExecucao.getText().replaceAll("\r", "\n"))) {
      JOptionPane.showMessageDialog(null, "Arquivo salvo com sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
    } else {
      JOptionPane.showMessageDialog(null, "Erro ao salvar arquivo.", "Erro", JOptionPane.ERROR_MESSAGE);
    }
  }

  private boolean validarPesosIniciais() {
    try {
      if (Double.parseDouble(jTxtPeso0.getText().replace(",", ".")) < 0.0 || Double.parseDouble(jTxtPeso0.getText().replace(",", ".")) > 1.0) {
        return false;
      }
      if (Double.parseDouble(jTxtPeso1.getText().replace(",", ".")) < 0.0 || Double.parseDouble(jTxtPeso1.getText().replace(",", ".")) > 1.0) {
        return false;
      }
      if (Double.parseDouble(jTxtPeso2.getText().replace(",", ".")) < 0.0 || Double.parseDouble(jTxtPeso2.getText().replace(",", ".")) > 1.0) {
        return false;
      }
      if (Double.parseDouble(jTxtPeso3.getText().replace(",", ".")) < 0.0 || Double.parseDouble(jTxtPeso3.getText().replace(",", ".")) > 1.0) {
        return false;
      }
    } catch (Exception e) {
      return false;
    }

    return true;
  }

  private boolean validarDados() {
    String[] vetor;
    int i;

    if (jTxtExecucao.getText().equals("")) {
      return false;
    }

    for (String linha : jTxtExecucao.getText().replaceAll("\r", "").split("\n")) {
      vetor = linha.split("\\s+");

      i = 0;
      if (vetor[0].equals("")) {
        i = 1;
      }

      if ((vetor.length - i) != 3) {
        return false;
      }

      for (int j = i; j < vetor.length; j++) {
        try {
          Double.parseDouble(vetor[j].replace(",", "."));
        } catch (NumberFormatException e) {
          return false;
        }
      }
    }

    return true;
  }

  private void treinarRede() {
    double p0;
    double p1;
    double p2;
    double p3;

    if (jChPesosAleatorios.isSelected()) {
      this.redePerceptron = new Perceptron();

      jTxtPeso0.setText(Double.toString(redePerceptron.getPeso0()).replace(".", ","));
      jTxtPeso1.setText(Double.toString(redePerceptron.getPeso1()).replace(".", ","));
      jTxtPeso2.setText(Double.toString(redePerceptron.getPeso2()).replace(".", ","));
      jTxtPeso3.setText(Double.toString(redePerceptron.getPeso3()).replace(".", ","));

      jTxtPeso0.setCaretPosition(0);
      jTxtPeso1.setCaretPosition(0);
      jTxtPeso2.setCaretPosition(0);
      jTxtPeso3.setCaretPosition(0);
    }

    if (jChPesosFixos.isSelected()) {
      if (validarPesosIniciais() == false) {
        JOptionPane.showMessageDialog(null, "Os pesos iniciais devem ser números entre 0 e 1.", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
      }

      p0 = Double.parseDouble(jTxtPeso0.getText().replace(",", "."));
      p1 = Double.parseDouble(jTxtPeso1.getText().replace(",", "."));
      p2 = Double.parseDouble(jTxtPeso2.getText().replace(",", "."));
      p3 = Double.parseDouble(jTxtPeso3.getText().replace(",", "."));
      
      this.redePerceptron = new Perceptron(p0, p1, p2, p3);
    }


    if (this.redePerceptron.treinarRede(arquivoTreinamento) == false) {
      JOptionPane.showMessageDialog(null, "Ocorreu um erro ao treinar a rede Perceptron, por favor tente novamente.\nCaso o erro persista entre em contato com o desenvolvedor.", "Erro ao treinar rede", JOptionPane.ERROR_MESSAGE);
      return;
    }

    jBtnClassificar.setEnabled(true);
    JOptionPane.showMessageDialog(null, "Rede Perceptron treinada com sucesso.\nÉpocas: " + redePerceptron.getNumEpocasTreinamento(), "Sucesso", JOptionPane.INFORMATION_MESSAGE);
  }
}
